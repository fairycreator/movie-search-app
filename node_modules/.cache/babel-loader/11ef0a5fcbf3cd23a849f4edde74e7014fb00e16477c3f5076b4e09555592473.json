{"ast":null,"code":"var _jsxFileName = \"/Users/andrijcsuhran/Desktop/GitHub/movie-search-app/src/components/MovieDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 20px;\n  text-align: center;\n`;\n_c = Container;\nconst Poster = styled.img`\n  width: 300px;\n  border-radius: 10px;\n`;\n_c2 = Poster;\nconst MovieDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const response = await axios.get(`https://www.omdbapi.com/?i=${id}&apikey=YOUR_API_KEY`);\n      setMovie(response.data);\n    };\n    fetchMovie();\n  }, [id]);\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Poster, {\n      src: movie.Poster,\n      alt: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \" \", movie.Year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \", movie.Genre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Plot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), \" \", movie.Plot]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Director:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \" \", movie.Director]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Actors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \" \", movie.Actors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetail, \"2DI+WM1NP8orkt5lpnG0LvHIzCE=\", false, function () {\n  return [useParams];\n});\n_c3 = MovieDetail;\nexport default MovieDetail;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Poster\");\n$RefreshReg$(_c3, \"MovieDetail\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","styled","jsxDEV","_jsxDEV","Container","div","_c","Poster","img","_c2","MovieDetail","_s","id","movie","setMovie","fetchMovie","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","Title","src","alt","Year","Genre","Plot","Director","Actors","_c3","$RefreshReg$"],"sources":["/Users/andrijcsuhran/Desktop/GitHub/movie-search-app/src/components/MovieDetail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 20px;\n  text-align: center;\n`;\n\nconst Poster = styled.img`\n  width: 300px;\n  border-radius: 10px;\n`;\n\nconst MovieDetail = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const response = await axios.get(\n        `https://www.omdbapi.com/?i=${id}&apikey=YOUR_API_KEY`\n      );\n      setMovie(response.data);\n    };\n    fetchMovie();\n  }, [id]);\n\n  if (!movie) {\n    return <Container>Loading...</Container>;\n  }\n\n  return (\n    <Container>\n      <h1>{movie.Title}</h1>\n      <Poster src={movie.Poster} alt={movie.Title} />\n      <p>\n        <strong>Year:</strong> {movie.Year}\n      </p>\n      <p>\n        <strong>Genre:</strong> {movie.Genre}\n      </p>\n      <p>\n        <strong>Plot:</strong> {movie.Plot}\n      </p>\n      <p>\n        <strong>Director:</strong> {movie.Director}\n      </p>\n      <p>\n        <strong>Actors:</strong> {movie.Actors}\n      </p>\n    </Container>\n  );\n};\n\nexport default MovieDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}